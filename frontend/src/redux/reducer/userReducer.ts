// Import necessary functions and types from Redux Toolkit and custom types
import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { UserReducerInitialState } from "../../types/reducer-types";
import { User } from "../../types/types";

// Define the initial state for the user
const initialState: UserReducerInitialState = {
  user: null, // Initially, no user is logged in
  loading: true, // Loading state to indicate if user data is being fetched
};

// Create a slice for the user using Redux Toolkit
export const userReducer = createSlice({
  name: "userReducer", // Name of the slice
  initialState, // Initial state defined above
  reducers: {
    // Reducer to handle the case when the user exists (logged in)
    userExist: (state, action: PayloadAction<User>) => {
      state.loading = false; // Set loading to false as user data is now available
      state.user = action.payload; // Set the user data from the action payload
    },
    // Reducer to handle the case when the user does not exist (not logged in)
    userNotExist: (state) => {
      state.loading = false; // Set loading to false as user data is now determined
      state.user = null; // Set user to null indicating no user is logged in
    },
  },
});

// Export the action creators generated by createSlice for use in components
export const { userExist, userNotExist } = userReducer.actions;

// Export the reducer function to be used in the store
export default userReducer.reducer;
