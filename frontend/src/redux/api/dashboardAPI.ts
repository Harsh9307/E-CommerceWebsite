// Import necessary functions and types from Redux Toolkit Query and custom types
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import {
  BarResponse,
  LineResponse,
  PieResponse,
  StatsResponse,
} from "../../types/api-types";

// Create an API slice for the dashboard
export const dashboardApi = createApi({
  reducerPath: "dashboardApi", // Key to mount the reducer in the Redux store
  baseQuery: fetchBaseQuery({
    baseUrl: `${import.meta.env.VITE_SERVER}/api/v1/dashboard/`, // Base URL for API requests, set using environment variable
  }),
  endpoints: (builder) => ({
    // Define a query endpoint to fetch stats data
    stats: builder.query<StatsResponse, string>({
      query: (id) => `stats?id=${id}`, // Construct the URL for the stats endpoint with the provided id
      keepUnusedDataFor: 0, // Remove unused data from cache immediately
    }),
    // Define a query endpoint to fetch pie chart data
    pie: builder.query<PieResponse, string>({
      query: (id) => `pie?id=${id}`, // Construct the URL for the pie endpoint with the provided id
      keepUnusedDataFor: 0, // Remove unused data from cache immediately
    }),
    // Define a query endpoint to fetch bar chart data
    bar: builder.query<BarResponse, string>({
      query: (id) => `bar?id=${id}`, // Construct the URL for the bar endpoint with the provided id
      keepUnusedDataFor: 0, // Remove unused data from cache immediately
    }),
    // Define a query endpoint to fetch line chart data
    line: builder.query<LineResponse, string>({
      query: (id) => `line?id=${id}`, // Construct the URL for the line endpoint with the provided id
      keepUnusedDataFor: 0, // Remove unused data from cache immediately
    }),
  }),
});

// Export custom hooks generated by createApi for use in components
export const { useBarQuery, useStatsQuery, useLineQuery, usePieQuery } =
  dashboardApi;

// The above hooks (useBarQuery, useStatsQuery, useLineQuery, usePieQuery) 
// can be used in React components to fetch data from the respective API endpoints.
